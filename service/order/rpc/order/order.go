// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package order

import (
	"context"

	"zero-mal/service/order/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CartItemRequest         = pb.CartItemRequest
	CartListResponse        = pb.CartListResponse
	Empty                   = pb.Empty
	OrderFilterRequest      = pb.OrderFilterRequest
	OrderInfoDetailResponse = pb.OrderInfoDetailResponse
	OrderInfoResponse       = pb.OrderInfoResponse
	OrderItemResponse       = pb.OrderItemResponse
	OrderListResponse       = pb.OrderListResponse
	OrderRequest            = pb.OrderRequest
	OrderStatus             = pb.OrderStatus
	ShopCartInfoResponse    = pb.ShopCartInfoResponse
	UserInfo                = pb.UserInfo

	Order interface {
		// 购物车
		CartList(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*CartListResponse, error)
		AddCartItem(ctx context.Context, in *CartItemRequest, opts ...grpc.CallOption) (*ShopCartInfoResponse, error)
		UpdateCartItem(ctx context.Context, in *CartItemRequest, opts ...grpc.CallOption) (*Empty, error)
		DeleteCartItem(ctx context.Context, in *CartItemRequest, opts ...grpc.CallOption) (*Empty, error)
		// 订单
		CreateOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderInfoResponse, error)
		OrderList(ctx context.Context, in *OrderFilterRequest, opts ...grpc.CallOption) (*OrderListResponse, error)
		OrderDetail(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderInfoDetailResponse, error)
		UpdateOrderStatus(ctx context.Context, in *OrderStatus, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

// 购物车
func (m *defaultOrder) CartList(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*CartListResponse, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CartList(ctx, in, opts...)
}

func (m *defaultOrder) AddCartItem(ctx context.Context, in *CartItemRequest, opts ...grpc.CallOption) (*ShopCartInfoResponse, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.AddCartItem(ctx, in, opts...)
}

func (m *defaultOrder) UpdateCartItem(ctx context.Context, in *CartItemRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.UpdateCartItem(ctx, in, opts...)
}

func (m *defaultOrder) DeleteCartItem(ctx context.Context, in *CartItemRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.DeleteCartItem(ctx, in, opts...)
}

// 订单
func (m *defaultOrder) CreateOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderInfoResponse, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

func (m *defaultOrder) OrderList(ctx context.Context, in *OrderFilterRequest, opts ...grpc.CallOption) (*OrderListResponse, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.OrderList(ctx, in, opts...)
}

func (m *defaultOrder) OrderDetail(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderInfoDetailResponse, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.OrderDetail(ctx, in, opts...)
}

func (m *defaultOrder) UpdateOrderStatus(ctx context.Context, in *OrderStatus, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.UpdateOrderStatus(ctx, in, opts...)
}

// Code generated by goctl. DO NOT EDIT!
// Source: inventory.proto

package inventory

import (
	"context"

	"zero-mal/service/inventory/rpc/inventory_pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty        = inventory_pb.Empty
	GoodsInvInfo = inventory_pb.GoodsInvInfo
	SellInfo     = inventory_pb.SellInfo

	Inventory interface {
		SetInv(ctx context.Context, in *GoodsInvInfo, opts ...grpc.CallOption) (*Empty, error)
		InvDetail(ctx context.Context, in *GoodsInvInfo, opts ...grpc.CallOption) (*GoodsInvInfo, error)
		Sell(ctx context.Context, in *SellInfo, opts ...grpc.CallOption) (*Empty, error)
		Reback(ctx context.Context, in *SellInfo, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultInventory struct {
		cli zrpc.Client
	}
)

func NewInventory(cli zrpc.Client) Inventory {
	return &defaultInventory{
		cli: cli,
	}
}

func (m *defaultInventory) SetInv(ctx context.Context, in *GoodsInvInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := inventory_pb.NewInventoryClient(m.cli.Conn())
	return client.SetInv(ctx, in, opts...)
}

func (m *defaultInventory) InvDetail(ctx context.Context, in *GoodsInvInfo, opts ...grpc.CallOption) (*GoodsInvInfo, error) {
	client := inventory_pb.NewInventoryClient(m.cli.Conn())
	return client.InvDetail(ctx, in, opts...)
}

func (m *defaultInventory) Sell(ctx context.Context, in *SellInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := inventory_pb.NewInventoryClient(m.cli.Conn())
	return client.Sell(ctx, in, opts...)
}

func (m *defaultInventory) Reback(ctx context.Context, in *SellInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := inventory_pb.NewInventoryClient(m.cli.Conn())
	return client.Reback(ctx, in, opts...)
}
